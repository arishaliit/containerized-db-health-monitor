# This GitHub Actions workflow automates the execution of the database health monitor.
# It runs on every push to the 'main' branch and on a daily schedule.
name: Database Health Monitor CI/CD

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC

jobs:
  run-health-checks:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to checkout your repository code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify a Python version

      - name: Install Python dependencies
        run: pip install psycopg2-binary # Install the PostgreSQL adapter for Python

      - name: Start Dockerized Database and Monitor
        # Use 'docker compose' (without hyphen) as it's the newer standard
        # and usually available on GitHub Actions runners.
        run: |
          docker compose -f docker-compose.yml up --build -d db monitor
          # Wait for the monitor service to exit (which means health checks completed)
          docker compose -f docker-compose.yml wait monitor
          # Capture the exit code of the monitor service
          MONITOR_EXIT_CODE=$(docker inspect db-health-monitor-db-monitor-1 --format='{{.State.ExitCode}}')
          echo "Monitor service exited with code: $MONITOR_EXIT_CODE"
          # If monitor exited with non-zero, fail the job
          if [ "$MONITOR_EXIT_CODE" -ne 0 ]; then
            echo "Monitor service failed. Showing logs:"
            docker compose -f docker-compose.yml logs monitor
            exit 1
          fi

      - name: Report Health Check Status
        # This step will only run if the previous 'Start Dockerized Database and Monitor' step passed (i.e., monitor exited with code 0)
        run: echo "--- Database Health Checks PASSED ---"

      - name: Stop and Remove Containers
        if: always() # Ensure this step runs even if previous steps fail
        # Use 'docker compose' (without hyphen) for cleanup
        run: docker compose -f docker-compose.yml down -v
